// Aspect ratio
// -----------------------------------------------------------------------------------------

@mixin aspect-ratio($key, $position: null, $fit: 'contain', $border-radius: var(--style-image-border-radius)) {

    @if $key == product {
        $fit: $product-image-aspect-ratio-fit;
        $border-radius: var(--style-product-image-border-radius);
    } @else if $key == article {
        $fit: $article-image-aspect-ratio-fit;
    }

    display: grid;
    grid-template-columns: minmax(auto, calc(100% * var(--img-scale-ratio, 1)));
    position: relative;
    overflow: hidden;
    justify-content: center;
    @if $border-radius {
        border-radius: calc($border-radius + 2px);
    }

    &.justify-content-start > .aspect-ratio-container {
        justify-content: start;
    }

    &.justify-content-center > .aspect-ratio-container {
        justify-content: center;
    }

    &.justify-content-end > .aspect-ratio-container {
        justify-content: end;
    }

    > .aspect-ratio-container {
        display: flex;
        justify-content: center;
        aspect-ratio: aspect-ratio($key);
        overflow: hidden; // Safari & IOS Fix, prevent container from stretching

        &:has(.lazy) {

            > img,
            > picture {
                z-index: 1;
            }

            &:before {
                content: '';
                position: absolute;
                display: block;
                width: 100%;
                height: 100%;
                background-color: var(--style-bg-accent-color);
                @if $border-radius {
                    border-radius: $border-radius;
                }
            }
        }

        &:has(.lazy.loaded)::before,
        &:has(.lazy.lazy-disable-placeholder)::before {
            content: none;
        }
        
        > *:not(.aspect-ratio-item) {
            flex-grow: 1;
        }

        .aspect-ratio-item {
            object-fit: var(--object-fit, #{$fit});

            @if $key == product {
                background-color: var(--style-bg-color);
            }

            @if $border-radius {
                border-radius: $border-radius;
            }

            @if $position {
                object-position: var(--object-position, $position);
            } @else {
                object-position: var(--object-position, 50% 50%);
            }

            &.aspect-ratio-item-position-start {
                --object-position: left;
            }

            &.aspect-ratio-item-position-top {
                --object-position: top;
            }

            &.aspect-ratio-item-position-end {
                --object-position: right;
            }

            &.aspect-ratio-item-position-bottom {
                --object-position: bottom;
            }

            &.aspect-ratio-item-position-center {
                --object-position: center;
            }

            &.aspect-ratio-item-cover {
                --object-fit: cover;
            }

            &.aspect-ratio-item-contain {
                --object-fit: contain;
            }
            
            &:not(:has(:not(.svg-placeholder.has-width))) {
                width: 100%;
            }

            &:not(:has(:not(.svg-placeholder.has-height))) {
                height: 100%;
            }

            &.svg-placeholder {

                &:not(.has-width) {
                    width: 100%;
                }
            
                &:not(.has-height) {
                    height: 100%;
                }
            }
        }
    }
}